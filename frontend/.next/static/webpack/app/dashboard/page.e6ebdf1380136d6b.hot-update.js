"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/page",{

/***/ "(app-pages-browser)/./src/contexts/AuthContext.tsx":
/*!**************************************!*\
  !*** ./src/contexts/AuthContext.tsx ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: () => (/* binding */ AuthProvider),\n/* harmony export */   useAuth: () => (/* binding */ useAuth)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n// Create context\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\n// API instance\nconst api = axios__WEBPACK_IMPORTED_MODULE_3__[\"default\"].create({\n    baseURL: \"http://localhost:3001/api\",\n    withCredentials: true\n});\n// Interceptor for token refresh\napi.interceptors.response.use((response)=>response, async (error)=>{\n    var _originalRequest_url, _originalRequest_url1, _originalRequest_url2, _error_response;\n    const originalRequest = error.config;\n    // Skip refresh token for auth endpoints to prevent loops\n    const isAuthEndpoint = ((_originalRequest_url = originalRequest.url) === null || _originalRequest_url === void 0 ? void 0 : _originalRequest_url.includes('/auth/login')) || ((_originalRequest_url1 = originalRequest.url) === null || _originalRequest_url1 === void 0 ? void 0 : _originalRequest_url1.includes('/auth/register')) || ((_originalRequest_url2 = originalRequest.url) === null || _originalRequest_url2 === void 0 ? void 0 : _originalRequest_url2.includes('/auth/refresh'));\n    // If error is 401 and we haven't already tried to refresh and it's not an auth endpoint\n    if (((_error_response = error.response) === null || _error_response === void 0 ? void 0 : _error_response.status) === 401 && !originalRequest._retry && !isAuthEndpoint) {\n        originalRequest._retry = true;\n        try {\n            // Attempt to refresh token\n            const { data } = await api.post('/auth/refresh');\n            // If successful, set the new access token\n            if (data.success) {\n                localStorage.setItem('accessToken', data.data.accessToken);\n                api.defaults.headers.common['Authorization'] = \"Bearer \".concat(data.data.accessToken);\n                // Retry the original request\n                return api(originalRequest);\n            }\n        } catch (refreshError) {\n            // If refresh fails, logout and redirect to login\n            localStorage.removeItem('accessToken');\n            localStorage.removeItem('refreshToken');\n            return Promise.reject(refreshError);\n        }\n    }\n    return Promise.reject(error);\n});\n// Provider component\nconst AuthProvider = (param)=>{\n    let { children } = param;\n    _s();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    // Check if user is authenticated on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const checkAuth = async ()=>{\n            const token = localStorage.getItem('accessToken');\n            if (token) {\n                api.defaults.headers.common['Authorization'] = \"Bearer \".concat(token);\n                try {\n                    const { data } = await api.get('/auth/me');\n                    if (data.success) {\n                        setUser(data.data);\n                    } else {\n                        localStorage.removeItem('accessToken');\n                        localStorage.removeItem('refreshToken');\n                    }\n                } catch (error) {\n                    localStorage.removeItem('accessToken');\n                    localStorage.removeItem('refreshToken');\n                }\n            }\n            setIsLoading(false);\n        };\n        checkAuth();\n    }, []);\n    // Login function\n    const login = async (username, password)=>{\n        setIsLoading(true);\n        setError(null);\n        try {\n            // Add more logging for debugging\n            console.log('Attempting login with:', {\n                username\n            });\n            const { data } = await api.post('/auth/login', {\n                username,\n                password\n            });\n            console.log('Login response:', data);\n            if (data.success) {\n                // Store tokens in localStorage\n                localStorage.setItem('accessToken', data.data.tokens.accessToken);\n                localStorage.setItem('refreshToken', data.data.tokens.refreshToken);\n                // Set user from response data\n                setUser(data.data.user);\n                // Set auth header for future requests\n                api.defaults.headers.common['Authorization'] = \"Bearer \".concat(data.data.tokens.accessToken);\n                // Navigate to dashboard\n                router.push('/dashboard');\n            }\n        } catch (error) {\n            console.error('Login error:', error);\n            // Type guard for error object\n            if (error && typeof error === 'object' && 'response' in error) {\n                var _errorResponse_data;\n                const errorResponse = error.response;\n                setError((errorResponse === null || errorResponse === void 0 ? void 0 : (_errorResponse_data = errorResponse.data) === null || _errorResponse_data === void 0 ? void 0 : _errorResponse_data.message) || 'Login failed');\n            } else {\n                setError('Login failed');\n            }\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    // Register function\n    const register = async (username, email, password)=>{\n        setIsLoading(true);\n        setError(null);\n        try {\n            const { data } = await api.post('/auth/register', {\n                username,\n                email,\n                password\n            });\n            if (data.success) {\n                // Store tokens in localStorage\n                localStorage.setItem('accessToken', data.data.tokens.accessToken);\n                localStorage.setItem('refreshToken', data.data.tokens.refreshToken);\n                // Set user from response data\n                setUser(data.data.user);\n                // Set auth header for future requests\n                api.defaults.headers.common['Authorization'] = \"Bearer \".concat(data.data.tokens.accessToken);\n                // Navigate to dashboard\n                router.push('/dashboard');\n            }\n        } catch (error) {\n            // Type guard for error object\n            if (error && typeof error === 'object' && 'response' in error) {\n                var _errorResponse_data;\n                const errorResponse = error.response;\n                setError((errorResponse === null || errorResponse === void 0 ? void 0 : (_errorResponse_data = errorResponse.data) === null || _errorResponse_data === void 0 ? void 0 : _errorResponse_data.message) || 'Registration failed');\n            } else {\n                setError('Registration failed');\n            }\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    // Logout function\n    const logout = async ()=>{\n        setIsLoading(true);\n        try {\n            // Get the refresh token from local storage\n            const refreshToken = localStorage.getItem('refreshToken');\n            if (refreshToken) {\n                // Send the refresh token with the logout request\n                await api.post('/auth/logout', {\n                    refreshToken\n                });\n            }\n            // Clear tokens from storage\n            localStorage.removeItem('accessToken');\n            localStorage.removeItem('refreshToken');\n            // Clear user state\n            setUser(null);\n            // Redirect to login page\n            router.push('/auth/login');\n        } catch (error) {\n            console.error('Logout error:', error);\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    // Replace refreshAccessToken with this\n    const verifySession = async ()=>{\n        setIsLoading(true);\n        try {\n            // Get the refresh token from local storage\n            const refreshToken = localStorage.getItem('refreshToken');\n            if (!refreshToken) {\n                console.error('No refresh token available for verification');\n                return false;\n            }\n            console.log('Verifying session with refresh token');\n            // Send refresh token in request body - EXACTLY like logout\n            const response = await api.post('/auth/verify-session', {\n                refreshToken\n            });\n            if (response.data.success) {\n                // Update tokens\n                const newAccessToken = response.data.data.accessToken;\n                const newRefreshToken = response.data.data.refreshToken;\n                console.log('Session verified successfully, received new tokens');\n                localStorage.setItem('accessToken', newAccessToken);\n                if (newRefreshToken) {\n                    localStorage.setItem('refreshToken', newRefreshToken);\n                }\n                // Update user state if not already set\n                if (!user && response.data.data.user) {\n                    setUser(response.data.data.user);\n                }\n                return true;\n            }\n            return false;\n        } catch (error) {\n            console.error('Session verification error:', error);\n            return false;\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: {\n            user,\n            isLoading,\n            isAuthenticated: !!user,\n            login,\n            register,\n            logout,\n            verifySession,\n            error\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\todor\\\\Coding_Projects\\\\Websites\\\\WEB_APP\\\\Wealth-Arc-v2\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n        lineNumber: 259,\n        columnNumber: 5\n    }, undefined);\n};\n_s(AuthProvider, \"aN/4P5mvQargRXOuRMxkP9Ug2bY=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter\n    ];\n});\n_c = AuthProvider;\n// Custom hook for using auth context\nconst useAuth = ()=>{\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n    if (context === undefined) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n};\n_s1(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/contexts/AuthContext.tsx\n"));

/***/ })

});