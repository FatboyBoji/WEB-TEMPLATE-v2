"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/admin/page",{

/***/ "(app-pages-browser)/./src/lib/api.ts":
/*!************************!*\
  !*** ./src/lib/api.ts ***!
  \************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n\n// Create a base API instance\nconst api = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n    baseURL: \"http://localhost:3001/api\" || 0,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n// Add a request interceptor to include the auth token\napi.interceptors.request.use((config)=>{\n    // Get token from localStorage\n    const token = localStorage.getItem('accessToken');\n    // If token exists, add it to the headers\n    if (token) {\n        config.headers.Authorization = \"Bearer \".concat(token);\n    }\n    return config;\n}, (error)=>{\n    return Promise.reject(error);\n});\n// Add a response interceptor to handle errors\napi.interceptors.response.use((response)=>response, async (error)=>{\n    var _error_response, _error_response1;\n    const originalRequest = error.config;\n    // Handle both 401 and 403 for token issues\n    if ((((_error_response = error.response) === null || _error_response === void 0 ? void 0 : _error_response.status) === 401 || ((_error_response1 = error.response) === null || _error_response1 === void 0 ? void 0 : _error_response1.status) === 403) && !originalRequest._retry) {\n        var _error_response_data_message, _error_response_data, _error_response2, _error_response_data_message1, _error_response_data1, _error_response3, _error_response_data_message2, _error_response_data2, _error_response4;\n        originalRequest._retry = true;\n        // Check the error message to see if it's related to token expiration\n        const isTokenError = ((_error_response2 = error.response) === null || _error_response2 === void 0 ? void 0 : (_error_response_data = _error_response2.data) === null || _error_response_data === void 0 ? void 0 : (_error_response_data_message = _error_response_data.message) === null || _error_response_data_message === void 0 ? void 0 : _error_response_data_message.includes('token')) || ((_error_response3 = error.response) === null || _error_response3 === void 0 ? void 0 : (_error_response_data1 = _error_response3.data) === null || _error_response_data1 === void 0 ? void 0 : (_error_response_data_message1 = _error_response_data1.message) === null || _error_response_data_message1 === void 0 ? void 0 : _error_response_data_message1.includes('expired')) || ((_error_response4 = error.response) === null || _error_response4 === void 0 ? void 0 : (_error_response_data2 = _error_response4.data) === null || _error_response_data2 === void 0 ? void 0 : (_error_response_data_message2 = _error_response_data2.message) === null || _error_response_data_message2 === void 0 ? void 0 : _error_response_data_message2.includes('invalid'));\n        // Only attempt token refresh for token-related errors\n        if (isTokenError) {\n            var _originalRequest_url;\n            // Don't try to refresh token if the current request is a refresh token request\n            if ((_originalRequest_url = originalRequest.url) === null || _originalRequest_url === void 0 ? void 0 : _originalRequest_url.includes('/auth/refresh')) {\n                localStorage.removeItem('accessToken');\n                localStorage.removeItem('refreshToken');\n                window.location.href = '/auth/login';\n                return Promise.reject(error);\n            }\n            try {\n                console.log('Attempting to refresh token');\n                // Get refresh token\n                const refreshToken = localStorage.getItem('refreshToken');\n                if (!refreshToken) {\n                    console.error('No refresh token available');\n                    throw new Error('No refresh token available');\n                }\n                // Log the refresh token being sent (first few characters only for security)\n                console.log('Using refresh token:', refreshToken.substring(0, 10) + '...');\n                // Attempt to refresh token with multiple approaches\n                const url = \"\".concat(\"http://localhost:3001/api\" || 0, \"/auth/refresh\");\n                console.log('Sending refresh token request to:', url);\n                // Send refresh token request with axios directly (not the intercepted api instance)\n                const refreshResponse = await (0,axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n                    method: 'post',\n                    url: \"\".concat(url),\n                    data: {\n                        refreshToken\n                    },\n                    params: {\n                        refreshToken\n                    },\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'X-Refresh-Token': refreshToken\n                    }\n                });\n                console.log('Token refresh response status:', refreshResponse.status);\n                // If successful, update the tokens\n                if (refreshResponse.data.success) {\n                    // Update tokens\n                    const newAccessToken = refreshResponse.data.data.accessToken;\n                    const newRefreshToken = refreshResponse.data.data.refreshToken;\n                    console.log('Received new tokens');\n                    localStorage.setItem('accessToken', newAccessToken);\n                    if (newRefreshToken) {\n                        localStorage.setItem('refreshToken', newRefreshToken);\n                    }\n                    // Update authorization header\n                    api.defaults.headers.common['Authorization'] = \"Bearer \".concat(newAccessToken);\n                    originalRequest.headers.Authorization = \"Bearer \".concat(newAccessToken);\n                    console.log('Retrying original request with new token');\n                    // Retry the original request\n                    return api(originalRequest);\n                } else {\n                    console.error('Refresh response not successful');\n                    throw new Error('Refresh token failed');\n                }\n            } catch (refreshError) {\n                console.error('Token refresh failed:', refreshError);\n                // Clear tokens and redirect to login\n                localStorage.removeItem('accessToken');\n                localStorage.removeItem('refreshToken');\n                window.location.href = '/auth/login';\n                return Promise.reject(refreshError);\n            }\n        } else {\n            // For non-token related 401/403 errors, just reject\n            return Promise.reject(error);\n        }\n    }\n    return Promise.reject(error);\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (api);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api.ts\n"));

/***/ })

});